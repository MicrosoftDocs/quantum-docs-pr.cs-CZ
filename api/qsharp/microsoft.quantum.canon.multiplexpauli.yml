### YamlMime:QSharpType
uid: microsoft.quantum.canon.multiplexpauli
name: MultiplexPauli
type: operation
namespace: microsoft.quantum.canon
summary: >-
  Použije Pauli rotaci v poli qubits.


  To platí pro násobenou jednotnou operaci, která provádí rotace pomocí úhlu $ \ theta_j $ o qubit Pauli operator $P $, pokud je kontrolováno stavem $n $-qubit číslo $ \ket{j} $.

  Konkrétně se akce této operace reprezentuje jednotně.


  $ $ \begin{align} U = \sum ^ {2 ^ n-1} _ {j = 0} \ket{j}\bra{j} \otimes e ^ {i P \ theta_j}.

  \end{align}


  ##
remarks: '`coefficients` budou doplněny elementy $ \ theta_j = $0,0, pokud je zadána méně než $2 ^ n $.'
syntax: 'operation MultiplexPauli (coefficients : Double[], pauli : Pauli, control : Microsoft.Quantum.Arithmetic.LittleEndian, target : Qubit) : Unit'
input:
  content: '(coefficients : Double[], pauli : Pauli, control : Microsoft.Quantum.Arithmetic.LittleEndian, target : Qubit)'
  types:
  - name: coefficients
    summary: Pole až do $2 ^ n $ koeficienty $ \ theta_j $. $J $ th součinitel indexuje číselný stav $ \ket{j} $ kódovaný ve formátu Little endian.
    isArray: true
    isPrimitive: true
    uid: Double
  - name: pauli
    summary: Pauli operátor $P $, který určuje osu otočení.
    isPrimitive: true
    uid: Pauli
  - name: control
    summary: $n $-qubit registr ovládacího prvku, který kóduje číselný stav $ \ket{j} $ ve formátu Little endian.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: target
    summary: Jeden qubit registr, který je otočen $e ^ {i P \ theta_j} $.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- approximatelymultiplexpauli
metadata:
  ms.openlocfilehash: caa11fea4402f6ad0849ee2e28a7da797d36f725
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91466879"
