### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.incrementphasebymodularinteger
name: IncrementPhaseByModularInteger
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: >-
  Provede modulární přírůstek qubit registru pomocí celočíselné konstanty.


  Poznamenejte si `increment` pomocí, `modulus` pomocí N a celého čísla kódovaného v `target` pomocí y, operace provede následující transformaci: | y ⟩ ↦ | y + a (mod N) ⟩ celá čísla ve formátu Little endian v QFT
remarks: >-
  Předpokládá, že `target` má nejvyšší bit nastavený na hodnotu 0.

  Také předpokládá, že hodnota cíle je menší než N.


  V diagramu okruhu a vysvětlení, viz obrázek 5 na [stránce 5 arXiv: quant-pH/0205095v3](https://arxiv.org/pdf/quant-ph/0205095v3.pdf#page=5).
syntax: 'operation IncrementPhaseByModularInteger (increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.PhaseLittleEndian) : Unit'
input:
  content: '(increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.PhaseLittleEndian)'
  types:
  - name: increment
    isPrimitive: true
    uid: Int
  - name: modulus
    isPrimitive: true
    uid: Int
  - name: target
    uid: microsoft.quantum.arithmetic.phaselittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.canon.modularincrementle
ms.openlocfilehash: 897e46cca640e714e1f000548ffd3226e8e27fa4
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: cs-CZ
ms.lasthandoff: 10/31/2019
ms.locfileid: "73219021"
