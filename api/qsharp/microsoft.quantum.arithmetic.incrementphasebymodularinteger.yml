### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.incrementphasebymodularinteger
name: IncrementPhaseByModularInteger
type: operation
namespace: microsoft.quantum.arithmetic
summary: >-
  Provede modulární přírůstek qubit registru pomocí celočíselné konstanty.


  Poznamenejte si `increment` $a $, `modulus` pomocí $N $ a celého čísla kódovaného v `target` $y $.

  Operace pak provede následující transformaci: \begin{align} \ket{y} \mapsto \ket{(y + a) \operatorname{mod} N} v \end{align} se ve formátu Little endian kódují.
remarks: >-
  Předpokládá, že `target` má nejvyšší bit nastavený na hodnotu 0.

  Také předpokládá, že hodnota cíle je menší než $N $.


  V diagramu okruhu a vysvětlení, viz obrázek 5 na [stránce 5 arXiv: quant-pH/0205095v3](https://arxiv.org/pdf/quant-ph/0205095v3.pdf#page=5).
syntax: 'operation IncrementPhaseByModularInteger (increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.PhaseLittleEndian) : Unit'
input:
  content: '(increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.PhaseLittleEndian)'
  types:
  - name: increment
    summary: Celočíselný přírůstek $a $ se přidá do $y $.
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Integer $N $, který mods $y + a $.
    isPrimitive: true
    uid: Int
  - name: target
    summary: Celé číslo $y $ ve formátu Little-endian, který je zakódovaný `increment` do $a $ je přidaný do.
    uid: microsoft.quantum.arithmetic.phaselittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.arithmetic.incrementbymodularinteger
metadata:
  ms.openlocfilehash: 8971d063b98c8dd3543bd700be09d138e85a5114
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91477079"
