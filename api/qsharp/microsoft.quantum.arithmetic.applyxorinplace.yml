### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.applyxorinplace
name: ApplyXorInPlace
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: >-
  Aplikuje operaci bitové operace-XOR mezi klasickým celým číslem a celým číslem reprezentovaným registrem qubits.


  Aplikuje `X` operace na qubits v registru s malým endian na základě 1 bitů v celé číslo.


  Poznamenejte `value` si a nechť y unsigned integer kódovaný v `target`a pak `InPlaceXorLE` provede operaci určenou následující mapou: $ \ket{y}\rightarrow \ket{y\oplus a} $, kde $ \OPLUS $ je bitový exkluzivní operátor OR.
syntax: 'operation ApplyXorInPlace (value : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(value : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: value
    summary: Celé číslo, které je považováno za nezáporné.
    isPrimitive: true
    uid: Int
  - name: target
    summary: Registr v případě příznaku, který `value` se používá k uložení v kódování Little endian.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 27568274d343242f3b3bd0eef8de6e48d546de1f
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82679913"
