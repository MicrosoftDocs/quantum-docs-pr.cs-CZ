### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.applyxorinplace
name: ApplyXorInPlace
type: operation
namespace: microsoft.quantum.arithmetic
summary: >-
  Aplikuje operaci bitové operace-XOR mezi klasickým celým číslem a celým číslem reprezentovaným registrem qubits.


  Aplikuje `X` operace na qubits v registru s malým endian na základě 1 bitů v celé číslo.


  Poznamenejte si `value` a nechť y unsigned integer kódovaný v a `target` pak `InPlaceXorLE` provede operaci určenou následující mapou: $ \ket{y}\rightarrow \ket{y\oplus a} $, kde $ \oplus $ je BITOVÝ exkluzivní operátor OR.
syntax: 'operation ApplyXorInPlace (value : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(value : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: value
    summary: Celé číslo, které je považováno za nezáporné.
    isPrimitive: true
    uid: Int
  - name: target
    summary: Registr v případě příznaku, který se používá k uložení `value` v kódování Little endian.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 40eb358b0687f289eb5c97977e1b7a83e3bb74ef
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91463174"
