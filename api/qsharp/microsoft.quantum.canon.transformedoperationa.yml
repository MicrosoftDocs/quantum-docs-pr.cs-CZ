### YamlMime:QSharpType
uid: microsoft.quantum.canon.transformedoperationa
name: TransformedOperationA
type: function
namespace: Microsoft.Quantum.Canon
summary: Výsledkem funkce a operace je nová operace, jejíž vstup je transformovaná pomocí dané funkce.
examples: >-
  Následující volání používá @"Microsoft.Quantum.Arithmetic.LittleEndianAsBigEndian" k transformaci operace navržené pro @"Microsoft.Quantum.Arithmetic.BigEndian" vstupy do operace, která přijímá vstupy typu @"Microsoft.Quantum.Arithmetic.LittleEndian":


  ```qsharp

  let leOp = TransformedOperation(LittleEndianAsBigEndian, ApplyXorInPlaceBE);

  ```
syntax: "function TransformedOperationA (fn : ('U -> 'T), op : ('T => Unit is Adj)) : ('U => Unit is Adj)"
input:
  content: "(fn : ('U -> 'T), op : ('T => Unit is Adj))"
  types:
  - name: fn
    summary: Funkce, která transformuje daný vstup do formuláře očekávaného operací.
    isFunction: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - uid: "'T"
        isLocal: true
  - name: op
    summary: Operace, která se má transformovat.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
output:
  content: ('U => Unit is Adj)
  types:
  - summary: Nová operace tbat zavolá `fn` se vstupem a pak předá výsledný výstup do `op`.
    isOperation: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
seeAlso:
- transformedoperation
- transformedoperationc
- transformedoperationca
- applywithinputtransformation
- compose
ms.openlocfilehash: ba4c22476bb1784a42ecb049fa0470204e81fa9e
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: cs-CZ
ms.lasthandoff: 10/31/2019
ms.locfileid: "73217066"
