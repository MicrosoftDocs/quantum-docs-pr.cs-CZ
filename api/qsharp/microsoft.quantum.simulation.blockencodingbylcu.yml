### YamlMime:QSharpType
uid: microsoft.quantum.simulation.blockencodingbylcu
name: BlockEncodingByLCU
type: function
namespace: Microsoft.Quantum.Simulation
summary: >-
  Zakóduje operátor zájmu do `BlockEncoding`.


  Tato konstrukce vytvoří `BlockEncoding` jednotkovou $U = P\cdot V\cdot P ^ \dagger $, který kóduje nějaký operátor $H = \ sum_ {j} | \ alpha_j | U_j $ z zájmu je lineární kombinací unitaries. $P $ je obvykle státní příprava,{0}\_takže $P \ket a\|= \ sum_j \sqrt{\ alpha_j/\vec\alpha\|\_2} \ket{j}\_a $ a $V = \ sum_ {j} \ket{j}\bra{j}\_a\otimes U_j $.
remarks: Tato `BlockEncoding` implementace poskytuje vlastnosti `BlockEncodingReflection`.
syntax: "function BlockEncodingByLCU (statePreparation : ('T => Unit is Adj + Ctl), selector : (('T, 'S) => Unit is Adj + Ctl)) : (('T, 'S) => Unit is Adj + Ctl)"
input:
  content: "(statePreparation : ('T => Unit is Adj + Ctl), selector : (('T, 'S) => Unit is Adj + Ctl))"
  types:
  - name: statePreparation
    summary: Jednotková $P $, která připraví určitý cílový stav.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
  - name: selector
    summary: Jednotková $V $, která kóduje komponentu unitaries $H $.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
      - uid: "'S"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
output:
  content: (('T, 'S) => Unit is Adj + Ctl)
  types:
  - summary: Jednotná $U $ pracuje společně na `a` registrech `s` a zablokuje $H $ a splňuje $U ^ \dagger = U $.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
      - uid: "'S"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
seeAlso:
- microsoft.quantum.canon.blockencoding
- microsoft.quantum.canon.blockencodingreflection
metadata:
  ms.openlocfilehash: 581170f33001b0fef6606a39085b36c7f9559ac0
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82686894"
