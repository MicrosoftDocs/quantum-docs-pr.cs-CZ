### YamlMime:QSharpType
uid: microsoft.quantum.canon.cnotchaintarget
name: CNOTChainTarget
type: operation
namespace: Microsoft.Quantum.Canon
summary: >-
  Vypočítá paritu pole qubits do cílového qubit.


  Pokud je pole zpočátku ve stavu $ \ket{q_0} \ket{q_1} \cdots \ket{q_{\Text{Target}}} $, konečný stav je dán $ \ket{q_0} \ket{q_1 \oplus q_0} \cdots \ket{q_{n-1} \oplus \cdots \oplus q_0 \oplus q_ {\Text{Target}}} $.
remarks: >-
  Následují ekvivalenty:


  ```qsharp

  CNOTChainTarget(Most(qs), Last(qs));

  ```


  a


  ```qsharp

  CNOTChain(qs);

  ```
syntax: 'operation CNOTChainTarget (qubits : Qubit[], targetQubit : Qubit) : Unit'
input:
  content: '(qubits : Qubit[], targetQubit : Qubit)'
  types:
  - name: qubits
    summary: Pole qubits, na kterém je vypočítána parita.
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: targetQubit
    summary: Konečný qubit, do kterého je parita ' qubits ' XORed.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 26893296ec8fe7ec8d8cc5309e2bd5066f315849
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73068032"
