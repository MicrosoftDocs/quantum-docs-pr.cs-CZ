### YamlMime:QSharpType
uid: microsoft.quantum.arrays.filtered
name: Filtered
type: function
namespace: microsoft.quantum.arrays
summary: Předané pole a predikát, který je definován pro prvky pole, vrátí pole, které se skládá z prvků, které odpovídají predikátu.
remarks: Funkce je definována pro obecné typy, tj., kdykoli máme pole `'T[]` a predikát `'T -> Bool` můžeme filtrovat prvky.
examples: >-
  Následující kód demonstruje funkci "Filtered".

  Predikát je definován pomocí @"microsoft.quantum.logical.greaterthani" funkce:


  ```qsharp

  open Microsoft.Quantum.Arrays;

  open Microsoft.Quantum.Logical;


  function FilteredDemo() : Unit {
     let predicate = GreaterThanI(_, 5);
     let filteredArray = Filtered(predicate, [2, 5, 9, 1, 8]);
     Message($"{filteredArray}");
  }

  ```


  Výsledek, který by měl být z tohoto příkladu očekáván, bude pole čísel větší než 5.
syntax: "function Filtered (predicate : ('T -> Bool), array : 'T[]) : 'T[]"
input:
  content: "(predicate : ('T -> Bool), array : 'T[])"
  types:
  - name: predicate
    summary: Funkce z `'T` na logickou hodnotu, která slouží k filtrování prvků.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: array
    summary: Pole prvků nad `'T` .
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'T[]"
  types:
  - summary: Pole `'T[]` prvků, které odpovídají predikátu.
    isArray: true
    uid: "'T"
    isLocal: true
typeParameters:
- uid: "'T"
  summary: Typ `array` prvků.
metadata:
  ms.openlocfilehash: 3b586b356e18c71f1721fbce0ec26e2ea37bfd73
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89352287"
