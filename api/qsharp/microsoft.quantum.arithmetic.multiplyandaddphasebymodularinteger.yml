### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.multiplyandaddphasebymodularinteger
name: MultiplyAndAddPhaseByModularInteger
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: Stejné jako MultiplyAndAddByModularInteger, ale předpokládá, že summand kóduje celá čísla v QFT základ.
remarks: >-
  Předpokládá, `phaseSummand` že má nejvyšší bit nastavený na hodnotu 0.

  Také předpokládá, že hodnota `phaseSummand` je menší než $N $.
syntax: 'operation MultiplyAndAddPhaseByModularInteger (constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, phaseSummand : Microsoft.Quantum.Arithmetic.PhaseLittleEndian) : Unit'
input:
  content: '(constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, phaseSummand : Microsoft.Quantum.Arithmetic.PhaseLittleEndian)'
  types:
  - name: constMultiplier
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Zbytky $N $, které přidávají a násobení, se provádí s ohledem na.
    isPrimitive: true
    uid: Int
  - name: multiplier
    summary: Registr v bajtech představuje unsigned integer, jehož hodnota má být přidána do každého popisku stavu `summand`.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: phaseSummand
    summary: Registr nečinnosti, který představuje unsigned integer, který se má použít jako cíl pro tuto operaci.
    uid: microsoft.quantum.arithmetic.phaselittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.arithmetic.multiplyandaddbymodularinteger
metadata:
  ms.openlocfilehash: 029ff8fb767ae018b7462f19a5fe09e83e606c6e
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82672804"
