### YamlMime:QSharpType
uid: microsoft.quantum.simulation.blockencodingtoreflection
name: BlockEncodingToReflection
type: function
namespace: Microsoft.Quantum.Simulation
summary: >-
  Převede `BlockEncoding` na ekvivalentní `BLockEncodingReflection`.


  To znamená, že daná `BlockEncoding` Jednotková $U $, která kóduje některý operátor $H $, převede ho na `BlockEncodingReflection` $U $, který kóduje stejný operátor, ale také splňuje $U ^ \dagger = U $.

  Tím se zvýší velikost pomocného registru $U $ o jeden qubit.
remarks: Tím se zvýší velikost pomocného registru $U $ o jeden qubit.
syntax: 'function BlockEncodingToReflection (blockEncoding : Microsoft.Quantum.Simulation.BlockEncoding) : Microsoft.Quantum.Simulation.BlockEncodingReflection'
references: '- Simulace Hamiltonian podle Qubitization Guang vystoupí hao nízká, Petr L. Čuangština https://arxiv.org/abs/1610.06546'
input:
  content: '(blockEncoding : Microsoft.Quantum.Simulation.BlockEncoding)'
  types:
  - name: blockEncoding
    summary: '`BlockEncoding` Jednotková $U $, která se má převést na reflexi.'
    uid: microsoft.quantum.simulation.blockencoding
output:
  content: Microsoft.Quantum.Simulation.BlockEncodingReflection
  types:
  - summary: Jednotková $U $ pracuje společně na registrech `a` a `s` blokující kódování $H $ a splňuje $U ^ \dagger = U $.
    uid: microsoft.quantum.simulation.blockencodingreflection
seeAlso:
- microsoft.quantum.canon.blockencoding
- microsoft.quantum.canon.blockencodingreflection
metadata:
  ms.openlocfilehash: 47eba3c59ef30f89139830aa4d9b98d22d141d8f
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73065618"
