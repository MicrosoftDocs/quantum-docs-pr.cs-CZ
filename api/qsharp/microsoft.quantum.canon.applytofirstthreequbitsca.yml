### YamlMime:QSharpType
uid: microsoft.quantum.canon.applytofirstthreequbitsca
name: ApplyToFirstThreeQubitsCA
type: operation
namespace: microsoft.quantum.canon
summary: >-
  Použije operaci na první tři qubits v registru.

  Modifikátor `CA` označuje, že operace je ovladatelné a s sousedními poli.
remarks: >-
  Jedná se o ekvivalent:


  ```qsharp

  op(register[0], register[1], register[2]);

  ```
syntax: 'operation ApplyToFirstThreeQubitsCA (op : ((Qubit, Qubit, Qubit) => Unit is Adj + Ctl), register : Qubit[]) : Unit'
input:
  content: '(op : ((Qubit, Qubit, Qubit) => Unit is Adj + Ctl), register : Qubit[])'
  types:
  - name: op
    summary: Operace, která se má použít pro první tři qubits
    isOperation: true
    input:
      types:
      - isPrimitive: true
        uid: Qubit
      - isPrimitive: true
        uid: Qubit
      - isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
  - name: register
    summary: Qubit pole na první tři qubits, ze kterých se operace používá.
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.canon.applytofirstthreequbits
metadata:
  ms.openlocfilehash: 8e8c655dde71c1303ddae1b9e1917cdf7848a890
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89357422"
