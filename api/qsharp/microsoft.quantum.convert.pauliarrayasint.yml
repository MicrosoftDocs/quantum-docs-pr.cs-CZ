### YamlMime:QSharpType
uid: microsoft.quantum.convert.pauliarrayasint
name: PauliArrayAsInt
type: function
namespace: Microsoft.Quantum.Convert
summary: Zakóduje qubit Pauli operátor reprezentovaný jako pole operátorů s jedním qubit Pauli do celého čísla.
remarks: >-
  Každý operátor Pauli se dá kódovat pomocí dvou bitů: $ $ \begin{align} \boldone \mapsto 00, \quad X \mapsto 01, \quad Y \mapsto 11, \quad Z \mapsto 10.

  \end{align} $ $


  Vzhledem k tomu, že pole operátorů Pauli `[P0, ..., Pn]`, vrátí tato funkce celé číslo se binárním rozšířením vytvořeným zřetězením mapování každého operátoru Pauli ve formátu `bits(Pn) ... bits(P0)`objednávky big-endian.
syntax: 'function PauliArrayAsInt (paulis : Pauli[]) : Int'
input:
  content: '(paulis : Pauli[])'
  types:
  - name: paulis
    summary: Pole s maximálně 31 qubit operátory Pauli.
    isArray: true
    isPrimitive: true
    uid: Pauli
output:
  content: Int
  types:
  - summary: Celé číslo jednoznačně identifikující `paulis`, jak je popsáno níže.
    isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: 0c211075d07147b1c1392fe3f3e4ceb110364bb3
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73230751"
