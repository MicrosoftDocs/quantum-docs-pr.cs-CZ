### YamlMime:QSharpType
uid: microsoft.quantum.arrays.partitioned
name: Partitioned
type: function
namespace: Microsoft.Quantum.Arrays
summary: Rozdělí pole na více částí.
examples: >-
  ```qsharp

  // The following returns [[1,5],[3],[7]];

  let split = Partitioned([2,1], [1,5,3,7]);

  ```
syntax: "function Partitioned (nElements : Int[], arr : 'T[]) : 'T[][]"
input:
  content: "(nElements : Int[], arr : 'T[])"
  types:
  - name: nElements
    summary: Počet prvků v každé části pole
    isArray: true
    isPrimitive: true
    uid: Int
  - name: arr
    summary: Vstupní pole, které se má rozdělit
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'T[][]"
  types:
  - summary: Více polí, kde první pole je `nElements[0]` první z `arr` a druhé pole je další `nElements[1]` z `arr` atd. Poslední pole bude obsahovat všechny zbývající prvky.
    isArray: true
    types:
    - isArray: true
      uid: "'T"
      isLocal: true
metadata:
  ms.openlocfilehash: 319147f72f0ef13a942ab5440a51f60d6f2bae1f
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82680885"
