### YamlMime:QSharpNamespace
functions:
- summary: Vyhodnotí, že dvě pole logických hodnot jsou shodná.
  uid: Microsoft.Quantum.Diagnostics.AllEqualityFactB
- summary: Vyhodnotí, že dvě pole celočíselných hodnot jsou shodná.
  uid: Microsoft.Quantum.Diagnostics.AllEqualityFactI
- summary: Deklaruje, že klasická podmínka je nepravdivá.
  uid: Microsoft.Quantum.Diagnostics.Contradiction
- summary: Vypíše stav aktuálního cílového počítače.
  uid: Microsoft.Quantum.Diagnostics.DumpMachine
- summary: Vypíše stav aktuálního cílového počítače přidružený k danému qubits.
  uid: Microsoft.Quantum.Diagnostics.DumpRegister
- summary: Vyhodnotí, že klasická proměnná bool má očekávanou hodnotu.
  uid: Microsoft.Quantum.Diagnostics.EqualityFactB
- summary: Vyhodnotí, že komplexní číslo má očekávanou hodnotu.
  uid: Microsoft.Quantum.Diagnostics.EqualityFactC
- summary: Vyhodnotí, že komplexní číslo má očekávanou hodnotu.
  uid: Microsoft.Quantum.Diagnostics.EqualityFactCP
- summary: Vyhodnotí, že proměnná klasického int má očekávanou hodnotu.
  uid: Microsoft.Quantum.Diagnostics.EqualityFactI
- summary: Vyhodnotí, že klasická hodnota typu BigInt má očekávanou hodnotu.
  uid: Microsoft.Quantum.Diagnostics.EqualityFactL
- summary: Vyhodnotí, že klasická proměnná výsledku má očekávanou hodnotu.
  uid: Microsoft.Quantum.Diagnostics.EqualityFactR
- summary: Představuje deklaraci identity, že klasická hodnota s plovoucí desetinnou čárkou má očekávanou hodnotu až do dané absolutní tolerance.
  uid: Microsoft.Quantum.Diagnostics.EqualityWithinToleranceFact
- summary: Deklaruje, že klasická podmínka je pravdivá.
  uid: Microsoft.Quantum.Diagnostics.Fact
- summary: Vnitřní funkce používaná k selhání s smysluplnými chybovými zprávami.
  uid: Microsoft.Quantum.Diagnostics.FormattedFailure
- summary: Vyhodnotí, že klasická komplexní číslo má očekávanou hodnotu až do malé tolerance 1E-10.
  uid: Microsoft.Quantum.Diagnostics.NearEqualityFactC
- summary: Vyhodnotí, že klasická komplexní číslo má očekávanou hodnotu až do malé tolerance 1E-10.
  uid: Microsoft.Quantum.Diagnostics.NearEqualityFactCP
- summary: Vyhodnotí, že klasická hodnota s plovoucí desetinnou čárkou má očekávanou hodnotu až na malou toleranci 1E-10.
  uid: Microsoft.Quantum.Diagnostics.NearEqualityFactD
name: Microsoft.Quantum.Diagnostics
newtypes:
- summary: Atribut rozpoznaný kompilátorem, pomocí kterého lze definovat alternativní název, který lze použít při načítání typu nebo volat pro účely testování.
  uid: Microsoft.Quantum.Diagnostics.EnableTestingViaName
- summary: Atribut rozpoznaný kompilátorem, který slouží k označení testu jednotky.
  uid: Microsoft.Quantum.Diagnostics.Test
operations:
- summary: Mezi voláním této operace a jejím sousedním objektem vyhodnotí, že daná operace je volána nejvíce po určitou dobu.
  uid: Microsoft.Quantum.Diagnostics.AllowAtMostNCallsCA
- summary: Mezi voláním této operace a jejím sousedním objektem, výrazy, které mají maximálně daný počet dalších qubits, jsou přiděleny pomocí příkazů using.
  uid: Microsoft.Quantum.Diagnostics.AllowAtMostNQubits
- summary: Vyhodnocení, že zadané qubits jsou všechny ve stavu $ \ket {0} $.
  uid: Microsoft.Quantum.Diagnostics.AssertAllZero
- summary: Vyhodnocení, že zadané qubits jsou všechny ve stavu $ \ket {0} $ až do dané tolerance.
  uid: Microsoft.Quantum.Diagnostics.AssertAllZeroWithinTolerance
- summary: Vyhodnotí, že měření daného qubits v dané Pauli základu bude mít vždy daný výsledek.
  uid: Microsoft.Quantum.Diagnostics.AssertMeasurement
- summary: Vyhodnotí, že měření daného qubits v daném Pauli základu bude mít daný výsledek s danou pravděpodobností v rámci určité tolerance.
  uid: Microsoft.Quantum.Diagnostics.AssertMeasurementProbability
- summary: >-
    Tyto dvě operace vyhodnotí, že jsou identické pro všechny vstupní stavy.

    Tento kontrolní výraz je implementován pomocí kontroly akce operací ve všech stavech formuláře $V _0 \otimes... \otimes V_ {n-1} $, kde $V _k $ je jedna ze stavů $ \ket {0} $, $ \ket {1} $, $ \ket{+} $ a $ \ket{i} $ (+ 1 Eigenstate of Pauli Y operator).

    Tento kontrolní výraz používá $n $ qubits a vyžaduje více volání operací, které jsou porovnány.
  uid: Microsoft.Quantum.Diagnostics.AssertOperationsEqualInPlace
- summary: Kontroluje `givenU` , zda je operace shodná s operací `expectedU` na dané vstupní velikosti tím, že kontroluje akci operací pouze na vektorech z výpočetního základu. To je nezbytné, ale nedostatečné, podmínkou rovnosti dvou unitaries.
  uid: Microsoft.Quantum.Diagnostics.AssertOperationsEqualInPlaceCompBasis
- summary: >-
    Tyto dvě operace vyhodnotí, že jsou identické pro všechny vstupní stavy.

    Tento kontrolní výraz je implementován pomocí Choi – Jamiołkowski isomorphism k omezení kontrolního výrazu na jeden z kontrolního výrazu qubit ve dvou registrech entangled. Proto tato operace potřebuje pouze jedno volání každé testované operace, ale vyžaduje, aby bylo přiděleno více qubits. Tento kontrolní výraz lze použít k zajištění toho, aby Optimalizovaná verze operace se shoduje s jeho implementací Naive nebo aby operace, která funguje na řadě nestránkovaného řetězce, souhlasila se známými případy.
  uid: Microsoft.Quantum.Diagnostics.AssertOperationsEqualReferenced
- summary: Vyhodnotí, že fáze rovného stavu pozice má očekávanou hodnotu.
  uid: Microsoft.Quantum.Diagnostics.AssertPhase
- summary: Vyhodnotí, že qubit `q` je v očekávané eigenstate operátoru Pauli z.
  uid: Microsoft.Quantum.Diagnostics.AssertQubit
- summary: >-
    Vyhodnotí, že qubit v očekávaném stavu.

    `expected` představuje složitý vektor, $ \ket{\psi} = \begin{bmatrix}a & b\end {bmatrix} ^ {\mathrm{T}} $. První prvek řazených kolekcí členů, který představuje každý z $a $, $b $ je reálnou částí komplexního čísla, zatímco druhým z nich je imaginární část. Poslední argument definuje toleranci, se kterou je proveden kontrolní výraz.
  uid: Microsoft.Quantum.Diagnostics.AssertQubitIsInStateWithinTolerance
- summary: Vyhodnotí, že qubit `q` je v očekávané eigenstate operátoru Pauli z až po danou toleranci.
  uid: Microsoft.Quantum.Diagnostics.AssertQubitWithinTolerance
- summary: V případě určité operace zobrazí diagnostiku operace, které jsou zpřístupněny aktuálním cílem provedení.
  uid: Microsoft.Quantum.Diagnostics.DumpOperation
- summary: Používá DumpRegister k poskytnutí diagnostiky pro stav referenčního a cílového registru. Zapsáno jako samostatná operace pro povolení přepsání a interpretace jako samostatných registrů, nikoli jako jeden kombinovaný registr.
  uid: Microsoft.Quantum.Diagnostics.DumpReferenceAndTarget
- summary: Kontroluje, zda je výsledek použití dvou operací `givenU` a `expectedU` na základní stav stejný. Základní stav je popsán podle `basis` parametru. <xref:microsoft.quantum.extensions.fliptobasis>Další podrobnosti o tomto popisu najdete v tématu funkce.
  uid: Microsoft.Quantum.Diagnostics._assertEqualOnBasisVector
- summary: >-
    Aplikuje unitaries, které map $ \ket {0} \otimes\cdots\ket {0} $ to $ \ket{\ psi_0} \otimes \ket{\ psi_ {n-1}} $, kde $ \ket{\ psi_k} $ závisí na `basis[k]` .

    Korespondence mezi hodnotou `basis[k]` a $ \ket{\ psi_k} $ je následující:

    - `basis[k]=0` $ \rightarrow \ket {0} $. - `basis[k]=1` $ \rightarrow \ket {1} $. - `basis[k]=2` $ \rightarrow \ket{+} $. - `basis[k]=3` $ \rightarrow \ket{i} $ (+ 1 eigenstate Pauli Y).
  uid: Microsoft.Quantum.Diagnostics._flipToBasis
- summary: Projde proměnnou přes kartézském produkt [0, meze [0]-1] × [0, meze [1]-1] × [0, meze [Length (meze)-1]-1] a volání op (ARR) pro každý prvek produktu kartézském.
  uid: Microsoft.Quantum.Diagnostics._iterateThroughCartesianPower
- summary: >-
    Vzhledem k dvěma registrům připraví maximální entangled stav mezi každou dvojici qubits na příslušných registrech. Všechny qubits musí začínat ve stavu | 0 ⟩.

    Výsledkem je, že odpovídající páry qubits z každého registru jsou v $ \bra{\ beta_ {00} } \ket{\ Beta_ {00} } $.
  uid: Microsoft.Quantum.Diagnostics._prepareEntangledState
summary: ''
uid: Microsoft.Quantum.Diagnostics
metadata:
  ms.openlocfilehash: d39cd1cac6121bd411fc0c87024254599bbb0641
  ms.sourcegitcommit: 29e0d88a30e4166fa580132124b0eb57e1f0e986
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 10/27/2020
  ms.locfileid: "92698228"
