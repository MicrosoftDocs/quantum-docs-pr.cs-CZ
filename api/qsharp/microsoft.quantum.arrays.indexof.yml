### YamlMime:QSharpType
uid: microsoft.quantum.arrays.indexof
name: IndexOf
type: function
namespace: Microsoft.Quantum.Arrays
summary: Vrátí první index prvního prvku v poli, který splňuje daný predikát. Pokud žádný takový prvek neexistuje, vrátí hodnotu-1.
examples: >-
  Předpokládejme, `IsEven : Int -> Bool` že se jedná o funkci `true` , která vrací pouze v případě, že je její vstup i. Pak lze použít s `IndexOf` k nalezení prvního i elementu v poli:


  ```Q#

  let items = [1, 3, 17, 2, 21];

  let idx = IndexOf(IsEven, items); // returns 3

  ```
syntax: "function IndexOf (predicate : ('T -> Bool), arr : 'T[]) : Int"
input:
  content: "(predicate : ('T -> Bool), arr : 'T[])"
  types:
  - name: predicate
    summary: Funkce predikátu, která funguje na prvcích pole.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: arr
    summary: Pole, které má být prohledáno pomocí daného predikátu.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Int
  types:
  - summary: Buď nejmenší index `idx` , který `predicate(arr[idx])` je true, nebo-1, pokud žádný takový prvek neexistuje.
    isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: 6fb95357096751e53f601a9c855ff656e2dd1b34
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82681005"
