### YamlMime:QSharpType
uid: microsoft.quantum.arrays.indexof
name: IndexOf
type: function
namespace: microsoft.quantum.arrays
summary: Vrátí první index prvního prvku v poli, který splňuje daný predikát. Pokud žádný takový prvek neexistuje, vrátí hodnotu-1.
examples: >-
  Předpokládejme, že `IsEven : Int -> Bool` se jedná o funkci, která vrací `true` pouze v případě, že je její vstup i. Pak lze použít s `IndexOf` k nalezení prvního i elementu v poli:


  ```Q#

  let items = [1, 3, 17, 2, 21];

  let idx = IndexOf(IsEven, items); // returns 3

  ```
syntax: "function IndexOf (predicate : ('T -> Bool), arr : 'T[]) : Int"
input:
  content: "(predicate : ('T -> Bool), arr : 'T[])"
  types:
  - name: predicate
    summary: Funkce predikátu, která funguje na prvcích pole.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: arr
    summary: Pole, které má být prohledáno pomocí daného predikátu.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Int
  types:
  - summary: Buď nejmenší index, `idx` který `predicate(arr[idx])` je true, nebo-1, pokud žádný takový prvek neexistuje.
    isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: 54cf5cddff7f0b50416599d798c37047ebfcd2a9
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91475226"
