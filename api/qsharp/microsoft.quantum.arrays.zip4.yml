### YamlMime:QSharpType
uid: microsoft.quantum.arrays.zip4
name: Zip4
type: function
namespace: microsoft.quantum.arrays
summary: U čtyř polí vrátí nové pole se 4 řazenými kolekcemi členů tak, aby každá 4 řazená kolekce členů obsahovala element z každého původního pole.
syntax: "function Zip4 (first : 'T1[], second : 'T2[], third : 'T3[], fourth : 'T4[]) : ('T1, 'T2, 'T3, 'T4)[]"
input:
  content: "(first : 'T1[], second : 'T2[], third : 'T3[], fourth : 'T4[])"
  types:
  - name: first
    summary: Pole obsahující hodnoty pro první prvek řazené kolekce členů.
    isArray: true
    uid: "'T1"
    isLocal: true
  - name: second
    summary: Pole obsahující hodnoty pro druhý prvek každé řazené kolekce členů.
    isArray: true
    uid: "'T2"
    isLocal: true
  - name: third
    summary: Pole obsahující hodnoty třetího prvku každé řazené kolekce členů.
    isArray: true
    uid: "'T3"
    isLocal: true
  - name: fourth
    summary: Pole obsahující hodnoty pro čtvrtý prvek každé řazené kolekce členů.
    isArray: true
    uid: "'T4"
    isLocal: true
output:
  content: ('T1, 'T2, 'T3, 'T4)[]
  types:
  - summary: Pole obsahující 4 – řazené kolekce členů formuláře `(first[idx], second[idx], third[idx], fourth[idx])` pro každý `idx` . Pokud se čtyři pole neshodují, bude výstup, který je kratší než tento počet vstupů.
    isArray: true
    types:
    - uid: "'T1"
      isLocal: true
    - uid: "'T2"
      isLocal: true
    - uid: "'T3"
      isLocal: true
    - uid: "'T4"
      isLocal: true
typeParameters:
- uid: "'T1"
  summary: Typ prvních prvků pole.
- uid: "'T2"
  summary: Typ druhých prvků pole.
- uid: "'T3"
  summary: Typ elementů třetího pole.
- uid: "'T4"
  summary: Typ čtvrté prvky pole.
seeAlso:
- zip
- zip3
metadata:
  ms.openlocfilehash: 437027a767ea7a2c49fd3b8dfa73858c847942c6
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89351335"
