### YamlMime:QSharpType
uid: microsoft.quantum.arrays.zip
name: Zip
type: function
namespace: microsoft.quantum.arrays
summary: Zadaná dvě pole, vrátí nové pole párů tak, aby každá dvojice obsahovala element z každého původního pole.
examples: >-
  ```qsharp

  let left = [1, 3, 71];

  let right = [false, true];

  let pairs = Zip(left, right); // [(1, false), (3, true)]

  ```
syntax: "function Zip (left : 'T[], right : 'U[]) : ('T, 'U)[]"
input:
  content: "(left : 'T[], right : 'U[])"
  types:
  - name: left
    summary: Pole obsahující hodnoty pro první prvek řazené kolekce členů.
    isArray: true
    uid: "'T"
    isLocal: true
  - name: right
    summary: Pole obsahující hodnoty pro druhý prvek každé řazené kolekce členů.
    isArray: true
    uid: "'U"
    isLocal: true
output:
  content: ('T, 'U)[]
  types:
  - summary: Pole obsahující páry formuláře `(left[idx], right[idx])` pro každý `idx` . Pokud tato dvě pole nemají stejnou délku, výstup bude až na kratší dobu.
    isArray: true
    types:
    - uid: "'T"
      isLocal: true
    - uid: "'U"
      isLocal: true
typeParameters:
- uid: "'T"
  summary: Typ levého prvku pole.
- uid: "'U"
  summary: Typ pravého pole prvků.
seeAlso:
- zip3
- zip4
metadata:
  ms.openlocfilehash: 448a5f66cbb8d927f357d83420c593ee80555705
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89351454"
