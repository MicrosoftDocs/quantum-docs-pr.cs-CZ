### YamlMime:QSharpType
uid: microsoft.quantum.preparation.preparequbit
name: PrepareQubit
type: operation
namespace: Microsoft.Quantum.Preparation
summary: >-
  Připraví qubit na + 1 (`Zero`) eigenstate daného operátoru Pauli.

  Pokud se udělí operátor identity, qubit se připraví do maximálního smíšeného stavu.


  Pokud byl původně qubit ve stavu $ \ket{0}$, tato operace připraví qubit v $ + $1 eigenstate daného operátoru Pauli, nebo pro `PauliI`, v případě, že je místo toho ve stavu "maximálního smíšené" <xref:microsoft.quantum.preparation.preparesinglequbitidentity>(viz).


  Pokud{0}byl qubit v jiném stavu než $ \ket $, tato operace použije následující brány: $H $ for `PauliX`, $HS $ for `PauliY`, $I $ pro `PauliZ` a <xref:microsoft.quantum.preparation.preparesinglequbitidentity> pro. `PauliI`
syntax: 'operation PrepareQubit (basis : Pauli, qubit : Qubit) : Unit'
input:
  content: '(basis : Pauli, qubit : Qubit)'
  types:
  - name: basis
    summary: Operátor Pauli $P $.
    isPrimitive: true
    uid: Pauli
  - name: qubit
    summary: Qubit, který se má připravit.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
metadata:
  ms.openlocfilehash: 70032bd9174bb987206e2084e2788e5ac7169ae7
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82681125"
