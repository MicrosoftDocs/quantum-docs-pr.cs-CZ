### YamlMime:QSharpType
uid: microsoft.quantum.preparation.preparequbit
name: PrepareQubit
type: operation
namespace: microsoft.quantum.preparation
summary: >-
  Připraví qubit na + 1 ( `Zero` ) eigenstate daného operátoru Pauli.

  Pokud se udělí operátor identity, qubit se připraví do maximálního smíšeného stavu.


  Pokud byl původně qubit ve stavu $ \ket {0} $, tato operace připraví qubit v $ + $1 eigenstate daného operátoru Pauli, nebo pro `PauliI` , v případě, že je místo toho ve stavu "maximálního smíšené" (viz <xref:microsoft.quantum.preparation.preparesinglequbitidentity> ).


  Pokud byl qubit v jiném stavu než $ \ket {0} $, tato operace použije následující brány: $H $ for `PauliX` , $HS $ for `PauliY` , $I $ pro `PauliZ` a <xref:microsoft.quantum.preparation.preparesinglequbitidentity> pro `PauliI` .
syntax: 'operation PrepareQubit (basis : Pauli, qubit : Qubit) : Unit'
input:
  content: '(basis : Pauli, qubit : Qubit)'
  types:
  - name: basis
    summary: Operátor Pauli $P $.
    isPrimitive: true
    uid: Pauli
  - name: qubit
    summary: Qubit, který se má připravit.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
metadata:
  ms.openlocfilehash: f42cb0ab28168124c7589606c34446d35013a325
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89331377"
