### YamlMime:QSharpType
uid: microsoft.quantum.random.transformedcontinuousdistribution
name: TransformedContinuousDistribution
type: function
namespace: Microsoft.Quantum.Random
summary: S ohledem na průběžnou distribuci vrátí novou distribuci, která transformuje originál pomocí dané funkce.
examples: >-
  Následující dvě distribuce jsou identické:


  ```Q#

  let dist1 = ContinuousUniformDistribution(1.0, 2.0);

  let dist2 = TransformedContinuousDistribution(
      PlusD(1.0, _),
      ContinuousUniformDistribution(0.0, 1.0)
  );

  ```
syntax: 'function TransformedContinuousDistribution (transform : (Double -> Double), distribution : Microsoft.Quantum.Random.ContinuousDistribution) : Microsoft.Quantum.Random.ContinuousDistribution'
input:
  content: '(transform : (Double -> Double), distribution : Microsoft.Quantum.Random.ContinuousDistribution)'
  types:
  - name: transform
    summary: Funkce, která transformuje variates původního rozdělení do transformované distribuce.
    isFunction: true
    input:
      types:
      - isPrimitive: true
        uid: Double
    output:
      types:
      - isPrimitive: true
        uid: Double
  - name: distribution
    summary: Původní distribuce, která se má transformovat.
    uid: microsoft.quantum.random.continuousdistribution
output:
  content: Microsoft.Quantum.Random.ContinuousDistribution
  types:
  - summary: Nové rozdělení související s transformací, kterou `distribution` předává `transform` .
    uid: microsoft.quantum.random.continuousdistribution
metadata:
  ms.openlocfilehash: 033e852fa0c536d51a62b93c9cf71d03d2fcb959
  ms.sourcegitcommit: 75c4edc7c410cc63dc8352e2a5bef44b433ed188
  ms.translationtype: MT
  ms.contentlocale: cs-CZ
  ms.lasthandoff: 08/25/2020
  ms.locfileid: "88864083"
