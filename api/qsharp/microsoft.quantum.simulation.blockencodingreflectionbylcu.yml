### YamlMime:QSharpType
uid: microsoft.quantum.simulation.blockencodingreflectionbylcu
name: BlockEncodingReflectionByLCU
type: function
namespace: Microsoft.Quantum.Simulation
summary: >-
  Zakóduje operátor zájmu na `BlockEncodingReflection`.


  Tato konstrukce sestaví `BlockEncodingReflection` Jednotková $U = P\cdot V\cdot P ^ \dagger $, která kóduje některé operátory $H = \sum_{j} | \alpha_j | U_j $ z zájmu, který je lineární kombinací unitaries. $P $ je typicky Příprava stavu, takže $P \ket{0}\_a\sum_j\sqrt {\ alpha_j/\|\vec\alpha\|\_2} \ket{j}\_a $ a $V = \sum_{j}\ket{j}\bra{j}\_a\otimes U_ j $.
remarks: Tato implementace `BlockEncoding` poskytuje vlastnosti `BlockEncodingReflection`.
syntax: 'function BlockEncodingReflectionByLCU (statePreparation : (Qubit[] => Unit is Adj + Ctl), selector : ((Qubit[], Qubit[]) => Unit is Adj + Ctl)) : Microsoft.Quantum.Simulation.BlockEncodingReflection'
input:
  content: '(statePreparation : (Qubit[] => Unit is Adj + Ctl), selector : ((Qubit[], Qubit[]) => Unit is Adj + Ctl))'
  types:
  - name: statePreparation
    summary: Jednotková $P $, která připraví určitý cílový stav.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
  - name: selector
    summary: Jednotková $V $, která kóduje komponentu unitaries $H $.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
output:
  content: Microsoft.Quantum.Simulation.BlockEncodingReflection
  types:
  - summary: Jednotná $U $ pracuje společně na registrech `a` a `s`, které blokují kódování $H $, a splňuje $U ^{-1} = U $.
    uid: microsoft.quantum.simulation.blockencodingreflection
seeAlso:
- microsoft.quantum.canon.blockencoding
- microsoft.quantum.canon.blockencodingreflection
ms.openlocfilehash: a092068a61d860074ace150b0c7872eb064a63b9
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: cs-CZ
ms.lasthandoff: 10/31/2019
ms.locfileid: "73219157"
